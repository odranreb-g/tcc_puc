version: "3.7"

services:
  legacy-system-postgresql:
    image: postgres:13
    container_name: "legacy-system-postgresql"
    environment:
      POSTGRES_PASSWORD: "legacy-system-postgresql"
      POSTGRES_DB: "legacy_system"
      POSTGRES_USER: "legacy_system"
    ports:
      - "15432:5432"
    volumes:
      - ./data/legacy_system:/var/lib/postgresql/data
    networks:
      - postgres-compose-network
  deliveries-api-postgresql:
    image: postgres:13
    container_name: "deliveries-api-postgresql"
    environment:
      POSTGRES_PASSWORD: "deliveries_api_postgresql"
      POSTGRES_DB: "deliveries_api"
      POSTGRES_USER: "deliveries_api"
    ports:
      - "25432:5432"
    volumes:
      - ./data/deliveries_api:/var/lib/postgresql/data
    networks:
      - postgres-compose-network
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - postgres-compose-network
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.5
    hostname: zookeeper
    container_name: zookeeper-tcc
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka1:
    image: confluentinc/cp-kafka:5.4.5
    hostname: kafka1
    container_name: kafka1-tcc
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

networks:
  postgres-compose-network:
    driver: bridge
